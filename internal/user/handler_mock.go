// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/PakornBank/go-backend-example/internal/user (interfaces: Handler)
//
// Generated by this command:
//
//	mockgen -destination=./handler_mock.go -package=user github.com/PakornBank/go-backend-example/internal/user Handler
//

// Package user is a generated GoMock package.
package user

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockHandler is a mock of Handler interface.
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerMockRecorder
	isgomock struct{}
}

// MockHandlerMockRecorder is the mock recorder for MockHandler.
type MockHandlerMockRecorder struct {
	mock *MockHandler
}

// NewMockHandler creates a new mock instance.
func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &MockHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandler) EXPECT() *MockHandlerMockRecorder {
	return m.recorder
}

// GetProfile mocks base method.
func (m *MockHandler) GetProfile(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetProfile", c)
}

// GetProfile indicates an expected call of GetProfile.
func (mr *MockHandlerMockRecorder) GetProfile(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockHandler)(nil).GetProfile), c)
}
